@using UniStore.Models.Enums
@model UniStore.Models.ViewModels.Admin.EditUserVM

@{
    ViewBag.Title = "Edit user";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="width-custom">
        <h2>Edit user</h2>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.UserName, new { @class = "form-control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control", disabled = "" } })
                @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email, new { @class = "form-control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Name, new { @class = "form-control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Address, new { @class = "form-control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PhoneNumber, new { @class = "form-control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
            </div>
        </div>
        @if (User.IsInRole(Enum.GetName(typeof(AppRole), AppRole.Administrator)))
        {
            <div class="form-group">
                @Html.LabelFor(model => model.Roles, new { @class = "form-control-label col-md-2" })
                <div class="col-md-10">
                    @for (var i = 0; i < Model.Roles.Count; i++)
                    {
                        <div>
                            <input type="hidden" name="Roles.Index" value="@i"/>
                            <input type="hidden" name="Roles[@i]" value="@Model.Roles[i]">
                            <span>->@Model.Roles[i]</span>
                            <button class="btn btn-smallest btn-danger" type="button" onClick="this.parentNode.parentNode.removeChild(this.parentNode);">Delete</button>
                        </div>
                    }
                </div>
            </div>

            <div class="form-group">

                @Html.LabelFor(model => model.NewRole, new { @class = "form-control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.NewRole,
                        Model.AppRoles, "Add role", new { @class = "form-control" })
                </div>
            </div>
        }
        else
        {
            <div class="form-group">
                @Html.LabelFor(model => model.Roles, new { @class = "form-control-label col-md-2" })
                <div class="col-md-10">
                    @for (var i = 0; i < Model.Roles.Count; i++)
                    {
                        <div>
                            <input type="hidden" name="Roles.Index" value="@i" />
                            <input type="hidden" name="Roles[@i]" value="@Model.Roles[i]">
                        </div>
                    }
                </div>
            </div>
        }

        <div class="form-group">
            <div class="offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-primary" />
                @Html.ActionLink("Back to List", "All", new { area = "Admin" }, new { @class = "btn btn-success" })
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}