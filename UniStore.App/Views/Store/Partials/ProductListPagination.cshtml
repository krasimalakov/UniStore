@using UniStore.Models
@model UniStore.Models.BindingModels.Product.SearchProductsBM
@if (Model.PageCount > 1)
{
    var actionName = ViewData["ActionName"].ToString();
    var targetId = ViewData["TargetId"].ToString();
    <nav class="pagination-container" aria-label="Page navigation">
        <ul class="pagination pagination-sm">
            @if (Model.Page <= 1)
            {
                <li class="page-item disabled">
                    <a class="page-link" aria-label="Previous"><</a>
                </li>
            }
            else
            {
                <li class="page-item">
                    @Ajax.ActionLink("<", "ProductsList", "Store",
                        new
                        {
                            Page=Model.Page-1,
                            Model.SubCategoryId,
                            Model.CategoryId,
                            Model.DepartmentId,
                            Model.Order,
                            Model.OrderBy,
                            Model.Search
                        },
                            new AjaxOptions
                            {
                                HttpMethod = "GET",
                                UpdateTargetId = targetId,
                                LoadingElementId = Constants.AjaxLoadingId,
                                LoadingElementDuration = 400
                            },
                            new { @class = "page-link" })
                </li>
            }

            @for (var i = 1; i <= Model.PageCount; i++)
            {
                <li class="page-item @(i == Model.Page ? "active" : "")">
                    @Ajax.ActionLink(i.ToString(), "ProductsList","Store",
                        new
                        {
                            Page=i,
                            Model.SubCategoryId,
                            Model.CategoryId,
                            Model.DepartmentId,
                            Model.Order,
                            Model.OrderBy,
                            Model.Search
                        },
                            new AjaxOptions
                            {
                                HttpMethod = "GET",
                                UpdateTargetId = targetId,
                                LoadingElementId = Constants.AjaxLoadingId,
                                LoadingElementDuration = 400
                            },
                            new { @class = "page-link" })
                </li>
            }

            @if (Model.Page >= Model.PageCount)
            {
                <li class="page-item disabled">
                    <a class="page-link" aria-label="Next">></a>
                </li>
            }
            else
            {
                <li class="page-item">
                   
                    @Ajax.ActionLink(">", "ProductsList", "Store",
                        new
                        {
                            Page=Model.Page+1,
                            Model.SubCategoryId,
                            Model.CategoryId,
                            Model.DepartmentId,
                            Model.Order,
                            Model.OrderBy,
                            Model.Search
                        },
                            new AjaxOptions
                            {
                                HttpMethod = "GET",
                                UpdateTargetId = targetId,
                                LoadingElementId = Constants.AjaxLoadingId,
                                LoadingElementDuration = 400
                            },
                            new { @class = "page-link" })
                </li>
            }
        </ul>
    </nav>
}